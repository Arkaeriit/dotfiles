[user]
	email = maxbouillot@gmail.com
	name = Maxime Bouillot

[alias]
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	st = status
	co = checkout
	ca = commit --amend
    trash = !git status -s | sed s:^.:: | cut -d ' ' -f 2 | xargs git add && git stash
	full-restore = !git restore --staged ':/*' && git restore ':/*'
	deep-restore = "!for i in $(git submodule status --recursive | cut -d ' ' -f 3); do cd $i ; git full-restore ; cd - 1> /dev/null ; done; git full-restore"
	restoreconf = restore ':/**/.config'
    suir = submodule update --init --recursive
    plom = !"if git branch --list | sed 's:*::; s: *:: ' | grep master > /dev/null; then git pull origin master; else if git branch --list | sed 's:*::; s: *:: ' | grep main > /dev/null; then git pull origin main; else echo 'No branch named main or master found' > /dev/stderr; false; fi; fi"
    psom = !"if git branch --list | sed 's:*::; s: *:: ' | grep master > /dev/null; then git push origin master; else if git branch --list | sed 's:*::; s: *:: ' | grep main > /dev/null; then git push origin main; else echo 'No branch named main or master found' > /dev/stderr; false; fi; fi"


[color]
	branch = auto
	diff = auto
	status = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[branch]
	autosetuprebase = always

[rerere]
	enabled = true

[core]
	excludesFile = /home/mbouillot/.config/git/gitignore
