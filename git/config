[user]
	email = maxime.bouillot@legrand.com
	name = Maxime Bouillot

[alias]
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	st = status
	co = checkout
	ca = commit --amend
    trash = !git status -s | sed s:^.:: | cut -d ' ' -f 2 | xargs git add && git stash
	full-restore = !git restore --staged ':/*' && git restore ':/*'
	deep-restore = "!for i in $(git submodule status --recursive | sed s:^.:: | cut -d ' ' -f 2); do cd $i ; git full-restore ; cd - 1> /dev/null ; done; git full-restore"
	restoreconf = restore ':/**/.config'
    #suir = submodule update --init --recursive
    plom = !"REMOTE=origin && if git remote | grep source > /dev/null; then REMOTE=source; fi && if git branch --list | sed 's:*::; s: *:: ' | grep master > /dev/null; then git pull $REMOTE master; else if git branch --list | sed 's:*::; s: *:: ' | grep main > /dev/null; then git pull $REMOTE main; else echo 'No branch named main or master found' > /dev/stderr; false; fi; fi"
    psom = !"if git branch --list | sed 's:*::; s: *:: ' | grep master > /dev/null; then git push origin master; else if git branch --list | sed 's:*::; s: *:: ' | grep main > /dev/null; then git push origin main; else echo 'No branch named main or master found' > /dev/stderr; false; fi; fi"
    trash-restore = stash apply stash@{0}
    cof = !"git checkout $(git branch --list | sed 's:\\*::; s: *:: ' | fzf --cycle --border)"
    k = !"gitk"
    lg-all = !"git branch -a | sed 's:^[^A-Za-z0-9]*::' | grep remotes | sed 's: .*::'  | xargs git lg"
    merge-edit = !"for file in $(git status | grep -F 'both modified' | cut -d : -f 2); do trim=$(echo $file | xargs); $EDITOR $trim; done"
    pristine = !"git clean -fdx :/; for submodule in $(git submodule | cut -d ' ' -f 3); do cd \"$submodule\"; git clean -fdx :/; cd -; done"
    sui = submodule update --init

[color]
	branch = auto
	diff = auto
	status = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[branch]
	autosetuprebase = always

[rerere]
	enabled = true

[core]
	excludesFile = ~/.config/git/gitignore
